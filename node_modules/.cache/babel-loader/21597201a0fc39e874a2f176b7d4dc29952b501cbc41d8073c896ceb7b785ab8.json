{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ACER\\\\coffee-beans-app\\\\src\\\\component\\\\CoffeeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { CoffeeAPIService } from \"../apiService\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListContainer = styled.div`\n  padding: 20px;\n  max-width: 1200px;\n  margin: auto;\n`;\n_c = ListContainer;\nconst SearchInput = styled.input`\n  padding: 10px;\n  width: 100%;\n  max-width: 400px;\n  margin-bottom: 20px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n`;\n_c2 = SearchInput;\nconst RegionContainer = styled.div`\n  margin-bottom: 40px;\n`;\n_c3 = RegionContainer;\nconst RegionTitle = styled.h2`\n  font-size: 1.5em;\n  margin-bottom: 10px;\n`;\n_c4 = RegionTitle;\nconst CoffeeGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 16px;\n`;\n_c5 = CoffeeGrid;\nconst CoffeeItemContainer = styled.div`\n  border: 1px solid #ddd;\n  padding: 16px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transition: box-shadow 0.3s;\n  cursor: pointer;\n\n  &:hover {\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\n  }\n`;\n_c6 = CoffeeItemContainer;\nconst CoffeeImage = styled.img`\n  width: 100%;\n  height: auto;\n  border-radius: 5px;\n  margin-bottom: 10px;\n`;\n_c7 = CoffeeImage;\nconst CoffeeName = styled.h3`\n  margin: 0;\n  font-size: 1.2em;\n`;\n_c8 = CoffeeName;\nconst CoffeePrice = styled.p`\n  font-size: 1em;\n  color: #555;\n`;\n_c9 = CoffeePrice;\nconst CoffeeList = () => {\n  _s();\n  const [coffeeBeans, setCoffeeBeans] = useState([]);\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  useEffect(() => {\n    async function fetchData() {\n      const beans = await CoffeeAPIService.fetchCoffeeBeans();\n      setCoffeeBeans(beans);\n    }\n    fetchData();\n  }, []);\n\n  // Mengelompokkan kopi berdasarkan region\n  const groupByRegion = beans => {\n    return beans.reduce((groups, coffee) => {\n      const region = coffee.region || \"Unknown\"; // Ganti 'region' dengan field yang sesuai\n      if (!groups[region]) {\n        groups[region] = [];\n      }\n      groups[region].push(coffee);\n      return groups;\n    }, {});\n  };\n\n  // Filter kopi berdasarkan nama\n  const filteredCoffeeBeans = coffeeBeans.filter(coffee => coffee.name.toLowerCase().includes(searchTerm.toLowerCase()));\n\n  // Kelompokkan kopi yang sudah difilter\n  const groupedCoffeeBeans = groupByRegion(filteredCoffeeBeans);\n  return /*#__PURE__*/_jsxDEV(ListContainer, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Coffee Beans List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchInput, {\n      type: \"text\",\n      placeholder: \"Search by name...\",\n      value: searchTerm,\n      onChange: e => setSearchTerm(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), Object.keys(groupedCoffeeBeans).map(region => /*#__PURE__*/_jsxDEV(RegionContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RegionTitle, {\n        children: region\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CoffeeGrid, {\n        children: groupedCoffeeBeans[region].map(coffee => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/coffee/${coffee.id}`,\n          style: {\n            textDecoration: 'none',\n            color: 'inherit'\n          },\n          children: /*#__PURE__*/_jsxDEV(CoffeeItemContainer, {\n            children: [/*#__PURE__*/_jsxDEV(CoffeeImage, {\n              src: coffee.image_url,\n              alt: coffee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CoffeeName, {\n              children: coffee.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CoffeePrice, {\n              children: [\"$\", coffee.price.toFixed(2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 17\n          }, this)\n        }, coffee.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this)]\n    }, region, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(CoffeeList, \"m1MmeZNhL3Nqv/ufhl3i0GFGkFk=\");\n_c10 = CoffeeList;\nexport default CoffeeList;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n$RefreshReg$(_c, \"ListContainer\");\n$RefreshReg$(_c2, \"SearchInput\");\n$RefreshReg$(_c3, \"RegionContainer\");\n$RefreshReg$(_c4, \"RegionTitle\");\n$RefreshReg$(_c5, \"CoffeeGrid\");\n$RefreshReg$(_c6, \"CoffeeItemContainer\");\n$RefreshReg$(_c7, \"CoffeeImage\");\n$RefreshReg$(_c8, \"CoffeeName\");\n$RefreshReg$(_c9, \"CoffeePrice\");\n$RefreshReg$(_c10, \"CoffeeList\");","map":{"version":3,"names":["React","useState","useEffect","Link","CoffeeAPIService","styled","jsxDEV","_jsxDEV","ListContainer","div","_c","SearchInput","input","_c2","RegionContainer","_c3","RegionTitle","h2","_c4","CoffeeGrid","_c5","CoffeeItemContainer","_c6","CoffeeImage","img","_c7","CoffeeName","h3","_c8","CoffeePrice","p","_c9","CoffeeList","_s","coffeeBeans","setCoffeeBeans","searchTerm","setSearchTerm","fetchData","beans","fetchCoffeeBeans","groupByRegion","reduce","groups","coffee","region","push","filteredCoffeeBeans","filter","name","toLowerCase","includes","groupedCoffeeBeans","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","Object","keys","map","to","id","style","textDecoration","color","src","image_url","alt","price","toFixed","_c10","$RefreshReg$"],"sources":["C:/Users/ACER/coffee-beans-app/src/component/CoffeeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { CoffeeAPIService } from \"../apiService\";\r\nimport styled from \"styled-components\";\r\n\r\nconst ListContainer = styled.div`\r\n  padding: 20px;\r\n  max-width: 1200px;\r\n  margin: auto;\r\n`;\r\n\r\nconst SearchInput = styled.input`\r\n  padding: 10px;\r\n  width: 100%;\r\n  max-width: 400px;\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst RegionContainer = styled.div`\r\n  margin-bottom: 40px;\r\n`;\r\n\r\nconst RegionTitle = styled.h2`\r\n  font-size: 1.5em;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CoffeeGrid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\r\n  gap: 16px;\r\n`;\r\n\r\nconst CoffeeItemContainer = styled.div`\r\n  border: 1px solid #ddd;\r\n  padding: 16px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  transition: box-shadow 0.3s;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n\r\nconst CoffeeImage = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst CoffeeName = styled.h3`\r\n  margin: 0;\r\n  font-size: 1.2em;\r\n`;\r\n\r\nconst CoffeePrice = styled.p`\r\n  font-size: 1em;\r\n  color: #555;\r\n`;\r\n\r\nconst CoffeeList = () => {\r\n  const [coffeeBeans, setCoffeeBeans] = useState([]);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const beans = await CoffeeAPIService.fetchCoffeeBeans();\r\n      setCoffeeBeans(beans);\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  // Mengelompokkan kopi berdasarkan region\r\n  const groupByRegion = (beans) => {\r\n    return beans.reduce((groups, coffee) => {\r\n      const region = coffee.region || \"Unknown\"; // Ganti 'region' dengan field yang sesuai\r\n      if (!groups[region]) {\r\n        groups[region] = [];\r\n      }\r\n      groups[region].push(coffee);\r\n      return groups;\r\n    }, {});\r\n  };\r\n\r\n  // Filter kopi berdasarkan nama\r\n  const filteredCoffeeBeans = coffeeBeans.filter(coffee =>\r\n    coffee.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n  );\r\n\r\n  // Kelompokkan kopi yang sudah difilter\r\n  const groupedCoffeeBeans = groupByRegion(filteredCoffeeBeans);\r\n\r\n  return (\r\n    <ListContainer>\r\n      <h1>Coffee Beans List</h1>\r\n      <SearchInput\r\n        type=\"text\"\r\n        placeholder=\"Search by name...\"\r\n        value={searchTerm}\r\n        onChange={(e) => setSearchTerm(e.target.value)}\r\n      />\r\n      {Object.keys(groupedCoffeeBeans).map(region => (\r\n        <RegionContainer key={region}>\r\n          <RegionTitle>{region}</RegionTitle>\r\n          <CoffeeGrid>\r\n            {groupedCoffeeBeans[region].map((coffee) => (\r\n              <Link to={`/coffee/${coffee.id}`} key={coffee.id} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                <CoffeeItemContainer>\r\n                  <CoffeeImage src={coffee.image_url} alt={coffee.name} />\r\n                  <CoffeeName>{coffee.name}</CoffeeName>\r\n                  <CoffeePrice>${coffee.price.toFixed(2)}</CoffeePrice>\r\n                </CoffeeItemContainer>\r\n              </Link>\r\n            ))}\r\n          </CoffeeGrid>\r\n        </RegionContainer>\r\n      ))}\r\n    </ListContainer>\r\n  );\r\n};\r\n\r\nexport default CoffeeList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}