{"ast":null,"code":"// src/components/CoffeeDetail.js\nimport React,{useEffect,useState}from\"react\";import{useParams,Link}from\"react-router-dom\";import{CoffeeAPIService}from\"../apiService\";import styled from\"styled-components\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const DetailContainer=styled.div`\n  padding: 20px;\n  max-width: px;\n  margin: auto;\n  border-radius: 8px;\n`;const CoffeeDetailContent=styled.div`\n  display: flex;\n  align-items: flex-start; /* Align items to the start */\n  margin-bottom: 20px; /* Spacing below the image and text */\n`;const CoffeeImage=styled.img`\n  width: 100%;\n  height: auto;\n  max-width: 600px; /* Increased max width for the image */\n  border-radius: 5px;\n  margin-right: 20px; /* Jarak antara gambar dan teks */\n`;const CoffeeTitle=styled.h2`\n  font-size: 2em;\n  margin: 0 0 10px;\n  color: #333;\n`;const CoffeeDescription=styled.p`\n  font-size: 1.1em;\n  margin-bottom: 15px;\n  color: #555;\n`;const CoffeeDetailItem=styled.p`\n  font-size: 1em;\n  margin: 5px 0;\n  color: #444;\n`;const FlavorList=styled.ul`\n  list-style-type: square;\n  padding-left: 20px;\n  color: #333;\n`;const DetailHeader=styled.h4`\n  margin-top: 20px;\n  color: #333;\n`;const CoffeeListContainer=styled.div`\n  display: flex;\n  flex-wrap: wrap; /* Allow items to wrap */\n  justify-content: center; /* Center items horizontally */\n  margin-top: 40px;\n`;const CoffeeListItem=styled(Link)`\n  display: flex;\n  flex-direction: column; /* Arrange items vertically */\n  align-items: center; /* Center items */\n  margin: 10px; /* Add margin around each item */\n  text-decoration: none;\n  color: #007bff;\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;const CoffeeListImage=styled.img`\n  width: 100px; /* Increase the image size */\n  height: auto;\n  border-radius: 5px;\n  margin-bottom: 5px; /* Space between image and text */\n`;const CoffeeListText=styled.span`\n  font-size: 1em; /* Adjust font size for the text */\n  text-align: center; /* Center text */\n`;const CoffeeDetail=()=>{const{id}=useParams();const[coffee,setCoffee]=useState(null);const[coffeeList,setCoffeeList]=useState([]);useEffect(()=>{async function fetchCoffeeDetail(){const beans=await CoffeeAPIService.fetchCoffeeBeans();const selectedCoffee=beans.find(coffee=>coffee.id===parseInt(id));setCoffee(selectedCoffee);setCoffeeList(beans);// Set the entire coffee list here\n}fetchCoffeeDetail();},[id]);if(!coffee)return/*#__PURE__*/_jsx(\"p\",{children:\"Loading...\"});// Filter the coffee list to show only the same region\nconst sameRegionCoffees=coffeeList.filter(coffeeItem=>coffeeItem.region===coffee.region&&coffeeItem.id!==coffee.id);return/*#__PURE__*/_jsxs(DetailContainer,{children:[/*#__PURE__*/_jsxs(CoffeeDetailContent,{children:[/*#__PURE__*/_jsx(CoffeeImage,{src:coffee.image_url,alt:coffee.name}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(CoffeeTitle,{children:coffee.name}),/*#__PURE__*/_jsx(CoffeeDescription,{children:coffee.description}),/*#__PURE__*/_jsxs(CoffeeDetailItem,{children:[\"Region: \",coffee.region]}),/*#__PURE__*/_jsxs(CoffeeDetailItem,{children:[\"Weight: \",coffee.weight,\"g\"]}),/*#__PURE__*/_jsxs(CoffeeDetailItem,{children:[\"Price: $\",coffee.price]}),/*#__PURE__*/_jsxs(CoffeeDetailItem,{children:[\"Roast Level: \",coffee.roast_level]}),/*#__PURE__*/_jsx(DetailHeader,{children:\"Flavor Profile:\"}),/*#__PURE__*/_jsx(FlavorList,{children:coffee.flavor_profile.map(flavor=>/*#__PURE__*/_jsx(\"li\",{children:flavor},flavor))}),/*#__PURE__*/_jsx(DetailHeader,{children:\"Grind Options:\"}),/*#__PURE__*/_jsx(FlavorList,{children:coffee.grind_option.map(option=>/*#__PURE__*/_jsx(\"li\",{children:option},option))})]})]}),/*#__PURE__*/_jsx(DetailHeader,{children:\"More Coffees from the Same Region:\"}),/*#__PURE__*/_jsx(CoffeeListContainer,{children:sameRegionCoffees.map(coffeeItem=>/*#__PURE__*/_jsxs(CoffeeListItem,{to:`/coffee/${coffeeItem.id}`,children:[/*#__PURE__*/_jsx(CoffeeListImage,{src:coffeeItem.image_url,alt:coffeeItem.name}),/*#__PURE__*/_jsx(CoffeeListText,{children:coffeeItem.name})]},coffeeItem.id))})]});};export default CoffeeDetail;","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","CoffeeAPIService","styled","jsx","_jsx","jsxs","_jsxs","DetailContainer","div","CoffeeDetailContent","CoffeeImage","img","CoffeeTitle","h2","CoffeeDescription","p","CoffeeDetailItem","FlavorList","ul","DetailHeader","h4","CoffeeListContainer","CoffeeListItem","CoffeeListImage","CoffeeListText","span","CoffeeDetail","id","coffee","setCoffee","coffeeList","setCoffeeList","fetchCoffeeDetail","beans","fetchCoffeeBeans","selectedCoffee","find","parseInt","children","sameRegionCoffees","filter","coffeeItem","region","src","image_url","alt","name","description","weight","price","roast_level","flavor_profile","map","flavor","grind_option","option","to"],"sources":["C:/Users/ACER/coffee-beans-app/src/component/CoffeeDetail.js"],"sourcesContent":["// src/components/CoffeeDetail.js\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { CoffeeAPIService } from \"../apiService\";\r\nimport styled from \"styled-components\";\r\n\r\nconst DetailContainer = styled.div`\r\n  padding: 20px;\r\n  max-width: px;\r\n  margin: auto;\r\n  border-radius: 8px;\r\n`;\r\n\r\nconst CoffeeDetailContent = styled.div`\r\n  display: flex;\r\n  align-items: flex-start; /* Align items to the start */\r\n  margin-bottom: 20px; /* Spacing below the image and text */\r\n`;\r\n\r\nconst CoffeeImage = styled.img`\r\n  width: 100%;\r\n  height: auto;\r\n  max-width: 600px; /* Increased max width for the image */\r\n  border-radius: 5px;\r\n  margin-right: 20px; /* Jarak antara gambar dan teks */\r\n`;\r\n\r\nconst CoffeeTitle = styled.h2`\r\n  font-size: 2em;\r\n  margin: 0 0 10px;\r\n  color: #333;\r\n`;\r\n\r\nconst CoffeeDescription = styled.p`\r\n  font-size: 1.1em;\r\n  margin-bottom: 15px;\r\n  color: #555;\r\n`;\r\n\r\nconst CoffeeDetailItem = styled.p`\r\n  font-size: 1em;\r\n  margin: 5px 0;\r\n  color: #444;\r\n`;\r\n\r\nconst FlavorList = styled.ul`\r\n  list-style-type: square;\r\n  padding-left: 20px;\r\n  color: #333;\r\n`;\r\n\r\nconst DetailHeader = styled.h4`\r\n  margin-top: 20px;\r\n  color: #333;\r\n`;\r\n\r\nconst CoffeeListContainer = styled.div`\r\n  display: flex;\r\n  flex-wrap: wrap; /* Allow items to wrap */\r\n  justify-content: center; /* Center items horizontally */\r\n  margin-top: 40px;\r\n`;\r\n\r\nconst CoffeeListItem = styled(Link)`\r\n  display: flex;\r\n  flex-direction: column; /* Arrange items vertically */\r\n  align-items: center; /* Center items */\r\n  margin: 10px; /* Add margin around each item */\r\n  text-decoration: none;\r\n  color: #007bff;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nconst CoffeeListImage = styled.img`\r\n  width: 100px; /* Increase the image size */\r\n  height: auto;\r\n  border-radius: 5px;\r\n  margin-bottom: 5px; /* Space between image and text */\r\n`;\r\n\r\nconst CoffeeListText = styled.span`\r\n  font-size: 1em; /* Adjust font size for the text */\r\n  text-align: center; /* Center text */\r\n`;\r\n\r\n\r\nconst CoffeeDetail = () => {\r\n  const { id } = useParams();\r\n  const [coffee, setCoffee] = useState(null);\r\n  const [coffeeList, setCoffeeList] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchCoffeeDetail() {\r\n      const beans = await CoffeeAPIService.fetchCoffeeBeans();\r\n      const selectedCoffee = beans.find((coffee) => coffee.id === parseInt(id));\r\n      setCoffee(selectedCoffee);\r\n      setCoffeeList(beans); // Set the entire coffee list here\r\n    }\r\n    fetchCoffeeDetail();\r\n  }, [id]);\r\n\r\n  if (!coffee) return <p>Loading...</p>;\r\n\r\n  // Filter the coffee list to show only the same region\r\n  const sameRegionCoffees = coffeeList.filter((coffeeItem) => coffeeItem.region === coffee.region && coffeeItem.id !== coffee.id);\r\n\r\n  return (\r\n    <DetailContainer>\r\n      <CoffeeDetailContent>\r\n        <CoffeeImage src={coffee.image_url} alt={coffee.name} />\r\n        <div>\r\n          <CoffeeTitle>{coffee.name}</CoffeeTitle>\r\n          <CoffeeDescription>{coffee.description}</CoffeeDescription>\r\n          <CoffeeDetailItem>Region: {coffee.region}</CoffeeDetailItem>\r\n          <CoffeeDetailItem>Weight: {coffee.weight}g</CoffeeDetailItem>\r\n          <CoffeeDetailItem>Price: ${coffee.price}</CoffeeDetailItem>\r\n          <CoffeeDetailItem>Roast Level: {coffee.roast_level}</CoffeeDetailItem>\r\n          <DetailHeader>Flavor Profile:</DetailHeader>\r\n          <FlavorList>\r\n            {coffee.flavor_profile.map((flavor) => (\r\n              <li key={flavor}>{flavor}</li>\r\n            ))}\r\n          </FlavorList>\r\n          <DetailHeader>Grind Options:</DetailHeader>\r\n          <FlavorList>\r\n            {coffee.grind_option.map((option) => (\r\n              <li key={option}>{option}</li>\r\n            ))}\r\n          </FlavorList>\r\n        </div>\r\n      </CoffeeDetailContent>\r\n\r\n      <DetailHeader>More Coffees from the Same Region:</DetailHeader>\r\n      <CoffeeListContainer>\r\n        {sameRegionCoffees.map((coffeeItem) => (\r\n          <CoffeeListItem key={coffeeItem.id} to={`/coffee/${coffeeItem.id}`}>\r\n            <CoffeeListImage src={coffeeItem.image_url} alt={coffeeItem.name} />\r\n            <CoffeeListText>{coffeeItem.name}</CoffeeListText>\r\n          </CoffeeListItem>\r\n        ))}\r\n      </CoffeeListContainer>\r\n    </DetailContainer>\r\n  );\r\n};\r\n\r\nexport default CoffeeDetail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}