{"ast":null,"code":"import{precacheAndRoute,createHandlerBoundToURL}from'workbox-precaching';import{NetworkFirst}from'workbox-strategies';// Precache your assets\nprecacheAndRoute(self.__WB_MANIFEST);// Caching API data\nself.addEventListener('fetch',event=>{if(event.request.url.includes('coffee')){event.respondWith(new NetworkFirst({cacheName:'coffee-api-cache',plugins:[{cacheWillUpdate:async _ref=>{let{response}=_ref;// Optionally filter or log the response before caching\nreturn response;}}]}).handle({event}));}});","map":{"version":3,"names":["precacheAndRoute","createHandlerBoundToURL","NetworkFirst","self","__WB_MANIFEST","addEventListener","event","request","url","includes","respondWith","cacheName","plugins","cacheWillUpdate","_ref","response","handle"],"sources":["C:/Users/ACER/coffee-beans-app/src/service-worker.js"],"sourcesContent":["import { precacheAndRoute, createHandlerBoundToURL } from 'workbox-precaching';\r\nimport { NetworkFirst } from 'workbox-strategies';\r\n\r\n// Precache your assets\r\nprecacheAndRoute(self.__WB_MANIFEST);\r\n\r\n// Caching API data\r\nself.addEventListener('fetch', (event) => {\r\n  if (event.request.url.includes('coffee')) {\r\n    event.respondWith(\r\n      new NetworkFirst({\r\n        cacheName: 'coffee-api-cache',\r\n        plugins: [\r\n          {\r\n            cacheWillUpdate: async ({ response }) => {\r\n              // Optionally filter or log the response before caching\r\n              return response;\r\n            },\r\n          },\r\n        ],\r\n      }).handle({ event })\r\n    );\r\n  }\r\n});\r\n"],"mappings":"AAAA,OAASA,gBAAgB,CAAEC,uBAAuB,KAAQ,oBAAoB,CAC9E,OAASC,YAAY,KAAQ,oBAAoB,CAEjD;AACAF,gBAAgB,CAACG,IAAI,CAACC,aAAa,CAAC,CAEpC;AACAD,IAAI,CAACE,gBAAgB,CAAC,OAAO,CAAGC,KAAK,EAAK,CACxC,GAAIA,KAAK,CAACC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAAC,QAAQ,CAAC,CAAE,CACxCH,KAAK,CAACI,WAAW,CACf,GAAI,CAAAR,YAAY,CAAC,CACfS,SAAS,CAAE,kBAAkB,CAC7BC,OAAO,CAAE,CACP,CACEC,eAAe,CAAE,MAAAC,IAAA,EAAwB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CAClC;AACA,MAAO,CAAAC,QAAQ,CACjB,CACF,CAAC,CAEL,CAAC,CAAC,CAACC,MAAM,CAAC,CAAEV,KAAM,CAAC,CACrB,CAAC,CACH,CACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}